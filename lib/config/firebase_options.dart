// File generated by FlutterFire CLI.
// ignore_for_file: lines_longer_than_80_chars, avoid_classes_with_only_static_members
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;

/// Default [FirebaseOptions] for use with your Firebase apps.
///
/// Example:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```
class DefaultFirebaseOptionsProd {
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      throw UnsupportedError(
        'DefaultFirebaseOptions have not been configured for web - '
        'you can reconfigure this by running the FlutterFire CLI again.',
      );
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        return ios;
      case TargetPlatform.macOS:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for macos - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.windows:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for windows - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  static const FirebaseOptions android = FirebaseOptions(
    apiKey: 'AIzaSyB_q3H7VypVulV6XtPhtltd-DRMBu8vVmg',
    appId: '1:1025235382131:android:c28290d7ff525213851f06',
    messagingSenderId: '1025235382131',
    projectId: 'driverhub-prod',
    storageBucket: 'driverhub-prod.appspot.com',
  );

  static const FirebaseOptions ios = FirebaseOptions(
    apiKey: 'AIzaSyAc6KcXHcVccHcZeyzM58yzL5GSSg_BMQs',
    appId: '1:1025235382131:ios:3038078a90d35dea851f06',
    messagingSenderId: '1025235382131',
    projectId: 'driverhub-prod',
    storageBucket: 'driverhub-prod.appspot.com',
    iosClientId:
        '1025235382131-9l6duftjntbf94g3pg7hjp4jmm5e8hea.apps.googleusercontent.com',
    iosBundleId: 'com.driverHubPartner',
  );
}

class DefaultFirebaseOptionsSandbox {
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      return web;
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        return ios;
      case TargetPlatform.macOS:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for macos - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.windows:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for windows - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  static const FirebaseOptions web = FirebaseOptions(
    apiKey: 'AIzaSyCDOHezj7VohjBiIP6WMLSZgdequCcbRpU',
    appId: '1:63850475790:web:7d4de794476d5a769ce75f',
    messagingSenderId: '63850475790',
    projectId: 'driverhub-sandbox',
    authDomain: 'driverhub-sandbox.firebaseapp.com',
    storageBucket: 'driverhub-sandbox.appspot.com',
    measurementId: 'G-WHM9F9R7DQ',
  );

  static const FirebaseOptions android = FirebaseOptions(
    apiKey: 'AIzaSyB8Wh1-BH5vRXGF2P4mEvFKbzzqi8FqM3U',
    appId: '1:63850475790:android:0965221e664fb0589ce75f',
    messagingSenderId: '63850475790',
    projectId: 'driverhub-sandbox',
    storageBucket: 'driverhub-sandbox.appspot.com',
  );

  static const FirebaseOptions ios = FirebaseOptions(
    apiKey: 'AIzaSyAWlPeTPP19Nr3J8q32PYCB2udzR-VAkDs',
    appId: '1:63850475790:ios:d54713b61ebc05d09ce75f',
    messagingSenderId: '63850475790',
    projectId: 'driverhub-sandbox',
    storageBucket: 'driverhub-sandbox.appspot.com',
    iosClientId:
        '63850475790-derpteljnvl01a6sitidf7di6c5mpnbb.apps.googleusercontent.com',
    iosBundleId: 'com.driverHubPartner',
  );
}
